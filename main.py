import os
import json
from aiogram import Bot, Dispatcher, F, types
from aiogram.types import Messege, ReplyKeyboardMarkup, KeybordButton
from aiogram.utils import executor
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
with open("places.json", "r", encoding="utf-8") as f:
  places = json.load(f)

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤
cities = sprted(set(place["city"] for place in places))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –≥–æ—Ä–æ–¥–∞
def city_keyboard():
  buttons = [[KeyboardButton(city)] for city in cities]
  return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

@dp.message(F.text.in_(cities))
async def handle_city(message: Message):
    city = message.text
    response = f"üèôÔ∏è –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ {city}:\n\n"
    for place in places:
        if place["city"] == city:
            response += f"üìç <b>{place['name']}</b>\n"
            response += f"{place['description']}\n"
            response += f"üìå –ê–¥—Ä–µ—Å: {place['address']}\n"
            response += f"üß≠ –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è: {place['directions']}\n\n"
    await message.answer(response, parse_mode="HTML")

@dp.message()
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–≥–∏–¥ –ø–æ –≥–æ—Ä–æ–¥–∞–º –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ üá∫üáø\n\n–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –µ–≥–æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö:",
        reply_markup=city_keyboard()
    )

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
